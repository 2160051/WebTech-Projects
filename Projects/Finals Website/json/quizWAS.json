[
{"question": "It happens when the security structure or framework left open of an application by Database or system administrator.", "choices": ["Cross-Site Scripting (XSS)", "Insecure Deserialization", "Security Misconfiguration", "Using Components with Known Vulnerabilities"], "answer": "c"},
{"question": "It happens when untrusted information or data is utilized to mishandle the logic of an application, deliver a denial of service (DoS) attack, or even execute self-assertive code.", "choices":["Cross-Site Scripting (XSS)", "Insecure Deserialization", "Security Misconfiguration", "Using Components with Known Vulnerabilities"], "answer": "b"},
{"question": "A vulberability of this is when the software is obsolete, unsupported or sensitive.", "choices": ["Cross-Site Scripting (XSS)", "Insecure Deserialization", "Security Misconfiguration", "Using Components with Known Vulnerabilities"], "answer": "d"},
{"question": "It is accomplished on a vulnerable or sensitive web application.", "choices": ["Cross-Site Scripting (XSS)", "Insecure Deserialization", "Security Misconfiguration", "Using Components with Known Vulnerabilities"], "answer": "a"},
{"question": "The victim of this is not the application but the user.", "choices": ["Cross-Site Scripting (XSS)", "Insecure Deserialization", "Security Misconfiguration", "Using Components with Known Vulnerabilities"], "answer": "a"},
{"question": "Insufficient Logging and Monitoring occurs when the security events are not logged properly and not monitoring the activity logs by the system.", "choices": ["True", "False", "Thru", "Falls"], "answer": "a"},
{"question": "Cross-Site Scripting (XSS) can be prevented by applying a sensitive code context when modifying the document browser on the client side.", "choices": ["True", "False", "Thru", "Falls"], "answer": "a"},
{"question": "A cross-site scripting vulnerability where the attacker transmits a link to the victimâ€™s application through social media, email, etc.", "choices": ["DOM XSS", "Stored XSS ", "Reflected XSS", "Cross XSS"], "answer": "c"},
{"question": "A cross-site scripting vulnerability where the attacker is able to store or plant a script. Once it is already stored, it is already permanent on the application.", "choices": ["DOM XSS ", "Stored XSS ", "Reflected XSS", "Cross XSS"], "answer": "b"},
{"question": "A cross-site scripting vulnerability where the script is plant as a output of changing the DOM of the site on the code of client side.", "choices": ["DOM XSS", "Stored XSS ", "Reflected XSS", "Cross XSS"], "answer": "a"},
{"question": "It occurs when the data is sent to an interpreter as a part of a query", "choices": ["Sensitive Data Exposure", "Injection", "Broken Authentication", "Broken Access Control"], "answer": "b"},
{"question": "Web applications lack protection not only for the users credential but also the sensitive information in the system.", "choices": ["Sensitive Data Exposure", "Injection", "Broken Authentication", "Broken Access Control"], "answer": "a"},
{"question": "Causes to allow attackers compromise passwords, session tokens and others.", "choices": ["Sensitive Data Exposure", "Injection", "Broken Authentication", "Broken Access Control"], "answer": "c"},
{"question": "It is due to improper implementation of authentication restrictions", "choices": ["Sensitive Data Exposure", "Injection", "Broken Authentication", "Broken Access Control"], "answer": "d"},
{"question": "Cause of incorrect implementation of application functions associated with authentication and session management", "choices": ["Sensitive Data Exposure", "Injection", "Broken Authentication", "Broken Access Control"], "answer": "c"}
]